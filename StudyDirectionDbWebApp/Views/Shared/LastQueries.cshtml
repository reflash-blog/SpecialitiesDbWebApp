@using StudyDirectionDbWebApp.Models
@{
    const int defaultTakenNumberOfMessages = 15;
    var db = new StudyDirectionDbEntities1();
    int counter = 0;
    var lastIdRead = LoggerInfoAdapter.Get(Server.MapPath("~/App_Data/loggerInfo.json")).LastId;
    var lastIdInBase = db.Logs.OrderByDescending(x => x.LogId).First().LogId;
    var amountOfUnreadMessages = lastIdInBase - lastIdRead;
    var takenNumberOfMessages = amountOfUnreadMessages > defaultTakenNumberOfMessages ? defaultTakenNumberOfMessages : amountOfUnreadMessages;
}
<li class="dropdown">
    <a href="#" class="dropdown-toggle" data-toggle="dropdown">
        <i class="fa fa-bell"></i>
        <span class="badge">@amountOfUnreadMessages</span>
    </a>
    <ul class="dropdown-menu">
        @foreach (var log in db.Logs.OrderByDescending(x => x.LogId).Take(takenNumberOfMessages))
        {
            counter++;
            <li>
                <a href="@Url.Action("Index", "Log", new {id = counter})">
                    <i class="fa fa-envelope"></i>
                    @if (log.Message.Length < 95)
                    {
                        <span>@log.Message</span>
                    }
                    else
                    {
                        <span>@log.Message.Substring(0, 95)</span>
                    }

                </a>
            </li>
        }
    </ul>
</li>

